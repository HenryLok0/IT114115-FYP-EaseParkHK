{% extends "base.html.j2" %}
{% import 'bootstrap/wtf.html' as wtf %}
{% block head %}
<title>Traffic Notices</title>
<link rel="icon" href="{{ url_for('static', filename='favicon.ico') }}" type="image/x-icon">
{% endblock %}
{% block app_content %}
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .notice {
            border: 1px solid #ccc;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        .notice h2 {
            margin-top: 0;
        }
        .notice p {
            margin: 10px 0;
        }
        .pdf-link {
            color: #007bff;
            text-decoration: none;
        }
        .pdf-link:hover {
            text-decoration: underline;
        }
        .search-record {
            display: inline-block;
            margin: 5px;
            padding: 5px 10px;
            background-color: #f1f1f1;
            border-radius: 5px;
            cursor: pointer;
            position: relative;
        }
        .search-record:hover {
            background-color: #e1e1e1;
        }
        .search-record .delete-record {
            position: absolute;
            top: 0;
            right: 0;
            background: red;
            color: white;
            border: none;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            cursor: pointer;
            font-size: 12px;
            line-height: 20px;
            text-align: center;
        }
        .form-group {
            display: flex;
            align-items: center;
        }
        .form-group input {
            flex: 1;
        }
        
        /* Dark mode styles for search records and notices */
        body.dark-mode .search-record {
            background-color: #2a2a2a;
            color: #e0e0e0;
        }
        body.dark-mode .search-record:hover {
            background-color: #3a3a3a;
        }
        body.dark-mode h1, 
        body.dark-mode h2 {
            color: #e0e0e0;
        }

        body.dark-mode .list-group {
            background-color: #1e1e1e;
            border-color: #444;
        }

        body.dark-mode .list-group-item {
            background-color: #2a2a2a;
            color: #e0e0e0;
            border-color: #444;
        }

        body.dark-mode .list-group-item:hover {
            background-color: #3a3a3a;
            color: #ffffff;
        }
    </style>

    <div class="container mt-5">
        <h1 class="text-center mb-4">Traffic Notices</h1>
        <div class="form-group">
            <input type="text" id="search-bar" class="form-control" placeholder="Search notices..." onkeyup="filterNotices()">
            <button id="add-search-term" class="btn btn-primary ml-2">+</button>
        </div>
        <div id="search-records" class="mt-3"></div>
        <ul class="list-group" id="notices-list">
            {% for notice in notices %}
                <li class="list-group-item notice-item">
                    <h2>{{ notice.Title_EN }}</h2>
                    <div>{{ notice.Content_EN | safe }}</div>
                    <p><strong>Start Date:</strong> {{ notice.StartEffectiveDate }}</p>
                </li>
            {% endfor %}
        </ul>
    </div>

    <script>
        // Apply dark mode on page load
        document.addEventListener('DOMContentLoaded', function() {
            if (localStorage.getItem('darkMode') === 'enabled') {
                applyDarkModeToSearchRecords();
            }
        });

        function applyDarkModeToSearchRecords() {
            // Make sure search records follow dark mode
            const searchRecords = document.querySelectorAll('.search-record');
            searchRecords.forEach(record => {
                if (document.body.classList.contains('dark-mode')) {
                    record.style.backgroundColor = '#2a2a2a';
                    record.style.color = '#e0e0e0';
                } else {
                    record.style.backgroundColor = '#f1f1f1';
                    record.style.color = '';
                }
            });
        }

        function filterNotices() {
            const searchInput = document.getElementById('search-bar').value.toLowerCase();
            const notices = document.querySelectorAll('.notice-item');

            notices.forEach(notice => {
                const title = notice.querySelector('h2').textContent.toLowerCase();
                const content = notice.querySelector('div').textContent.toLowerCase();
                const startDate = notice.querySelector('p').textContent.toLowerCase();

                if (title.includes(searchInput) || content.includes(searchInput) || startDate.includes(searchInput)) {
                    notice.style.display = '';
                } else {
                    notice.style.display = 'none';
                }
            });
        }

        document.getElementById('add-search-term').addEventListener('click', () => {
            const searchInput = document.getElementById('search-bar').value;
            if (searchInput.trim() !== '') {
                const searchRecords = document.getElementById('search-records');
                const newRecord = document.createElement('div');
                newRecord.className = 'search-record';
                newRecord.textContent = searchInput;
                
                // Apply dark mode style if active
                if (document.body.classList.contains('dark-mode')) {
                    newRecord.style.backgroundColor = '#2a2a2a';
                    newRecord.style.color = '#e0e0e0';
                }

                const deleteButton = document.createElement('button');
                deleteButton.className = 'delete-record';
                deleteButton.textContent = 'Ã—';
                deleteButton.addEventListener('click', (e) => {
                    e.stopPropagation();
                    searchRecords.removeChild(newRecord);
                });

                newRecord.appendChild(deleteButton);
                newRecord.addEventListener('click', () => {
                    document.getElementById('search-bar').value = searchInput;
                    filterNotices();
                });

                searchRecords.appendChild(newRecord);
            }
        });
    </script>

    <!-- Chatbox Button -->
    <div id="chatbox-button" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
        <button class="chatbox-btn" onclick="toggleChatbox()" aria-label="Chat with AI">
            <span class="chatbox-icon">&#128172;</span> <!-- Speech bubble emoji as an icon -->
        </button>
    </div>

    <!-- Chatbox Popup -->
    <div id="chatbox-popup" class="chatbox-popup">
        <div class="chatbox-header">
            <h5 class="mb-0">AI Chatbox Room</h5>
            <button class="btn btn-sm btn-danger" onclick="toggleChatbox()">Close</button>
        </div>
        <iframe src="{{ url_for('ai_chatbox') }}" width="100%" height="100%" frameborder="0"></iframe>
    </div>

    <style>
        /* Floating Action Button (FAB) Style for Chatbox Button */
        .chatbox-btn {
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .chatbox-btn:hover {
            background-color: #0056b3;
            transform: scale(1.1);
        }

        .chatbox-btn:focus {
            outline: none;
            box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.5);
        }

        .chatbox-icon {
            font-size: 1.5rem;
            line-height: 1;
        }

        /* Chatbox Popup */
        .chatbox-popup {
            position: fixed;
            bottom: 90px;
            right: 20px;
            width: 300px;
            height: 800px;
            background: white;
            border: 1px solid #ccc;
            border-radius: 10px;
            display: none;
            z-index: 1000;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .chatbox-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background: #007bff;
            color: white;
            border-bottom: 1px solid #ccc;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .chatbox-header h5 {
            margin: 0;
        }
    </style>

    <script>
        function toggleChatbox() {
            const chatboxPopup = document.getElementById('chatbox-popup');
            chatboxPopup.style.display = chatboxPopup.style.display === 'none' ? 'block' : 'none';
        }
        
        // Listen for dark mode changes from other pages
        window.addEventListener('storage', function(event) {
            if (event.key === 'darkMode') {
                applyDarkModeToSearchRecords();
            }
        });
    </script>
{% endblock %}