{% extends "zh.base.html.j2" %}
{% import 'bootstrap/wtf.html' as wtf %}
{% block head %}
<title>泊易香港 (EaseParkHK)</title>
<link rel="icon" href="{{ url_for('static', filename='favicon.ico') }}" type="image/x-icon">
{% endblock %}
{% block app_content %}
{% include "zh.special_traffic_news.html.j2" %}
    <div class="container mt-5">
        <h1 class="text-center mb-4">停車場資訊</h1>

        <!-- 篩選選項 -->
        <div class="form-group mt-4">
            <label for="vehicle-type">車輛類型：</label>
            <select id="vehicle-type" class="form-control" onchange="filterCarParks()">
                <option value="privateCar">私家車</option>
                <option value="motorCycle">摩托車</option>
                <option value="HGV">重型貨車</option>
                <option value="LGV">大型貨車</option>
                <option value="coach">旅遊巴</option>
            </select>
        </div>

        <!-- 營業狀態篩選 -->
        <div class="form-group mt-4">
            <label for="status-filter">營業狀態：</label>
            <select id="status-filter" class="form-control" onchange="filterCarParksByStatus()">
                <option value="all">全部</option>
                <option value="營業中">營業中</option>
                <option value="未提供">未提供</option>
            </select>
        </div>

        {% if favorite_carparks %}
        <h2>收藏的停車場</h2>
        <table class="table table-striped table-hover mt-4">
            <thead class="thead-dark">
                <tr>
                    <th onclick="sortTable(0)">名稱 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(1)">地址 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(2)">營業狀態 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(3)">空位 <span class="sort-icon">&#x25B2;</span></th>
                    <th>詳細</th>
                    <th>位置</th>
                    <th>收藏</th>
                </tr>
            </thead>
            <tbody id="favorite-carpark-table">
                {% for carpark in favorite_carparks %}
                    {% for vehicle_type in ['privateCar', 'motorCycle', 'LGV', 'HGV', 'coach'] %}
                        {% set vacancy = carpark[vehicle_type ~ '_vacancy'] %}
                        {% if vacancy not in ['N/A', 'none', '-1', '0'] %}
                            <tr data-vehicle-type="{{ vehicle_type }}" data-park-id="{{ carpark.park_id }}">
                                <td>{{ carpark.name_tc }}</td>
                                <td>{{ carpark.displayAddress_tc }}</td>
                                <td>{{ carpark.opening_status | translate_status }}</td>
                                <td>{{ vacancy }}</td>
                                <td>
                                    <a href="{{ url_for('zh_carpark_detail', park_id=carpark.park_id) }}" class="btn btn-info btn-sm">詳細</a>
                                </td>
                                <td>
                                    <button class="btn btn-primary btn-sm" onclick="showMap('{{ carpark.latitude }}', '{{ carpark.longitude }}', '{{ carpark.name_tc }}', '{{ carpark.displayAddress_tc }}', '{{ carpark.opening_status | translate_status }}', '{{ vacancy }}', '{{ vehicle_type }}')">
                                        地圖
                                    </button>
                                </td>
                                <td>
                                    <button class="btn btn-warning btn-sm" onclick="toggleFavorite('{{ carpark.park_id }}')">
                                        取消收藏
                                    </button>
                                </td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                {% endfor %}
            </tbody>
        </table>
        {% endif %}

        <h2>所有停車場</h2>
        <table class="table table-striped table-hover mt-4">
            <thead class="thead-dark">
                <tr>
                    <th onclick="sortTable(0)">名稱 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(1)">地址 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(2)">營業狀態 <span class="sort-icon">&#x25B2;</span></th>
                    <th onclick="sortTable(3)">空位 <span class="sort-icon">&#x25B2;</span></th>
                    <th>詳細</th>
                    <th>位置</th>
                    <th>收藏</th>
                </tr>
            </thead>
            <tbody id="carpark-table">
                {% for carpark in carparks %}
                    {% for vehicle_type in ['privateCar', 'motorCycle', 'LGV', 'HGV', 'coach'] %}
                        {% set vacancy = carpark[vehicle_type ~ '_vacancy'] %}
                        {% if vacancy not in ['N/A', 'none', '-1', '0'] %}
                            <tr data-vehicle-type="{{ vehicle_type }}" data-park-id="{{ carpark.park_id }}">
                                <td>{{ carpark.name_tc }}</td>
                                <td>{{ carpark.displayAddress_tc }}</td>
                                <td>{{ carpark.opening_status | translate_status }}</td>
                                <td>{{ vacancy }}</td>
                                <td>
                                    <a href="{{ url_for('zh_carpark_detail', park_id=carpark.park_id) }}" class="btn btn-info btn-sm">詳細</a>
                                </td>
                                <td>
                                    <button class="btn btn-primary btn-sm" onclick="showMap('{{ carpark.latitude }}', '{{ carpark.longitude }}', '{{ carpark.name_tc }}', '{{ carpark.displayAddress_tc }}', '{{ carpark.opening_status | translate_status }}', '{{ vacancy }}', '{{ vehicle_type }}')">
                                        地圖
                                    </button>
                                </td>
                                <td>
                                    <button class="btn btn-warning btn-sm" onclick="toggleFavorite('{{ carpark.park_id }}')">
                                        {{ '取消收藏' if carpark.park_id in favorite_carparks else '收藏' }}
                                    </button>
                                </td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                {% endfor %}
            </tbody>
        </table>
        繼續使用即表示您同意泊易香港 (EaseParkHK)的 <a href="/privacy_policy">{{ _('隱私政策') }}</a>
        <p id="no-results" class="text-center text-danger font-weight-bold mt-4" style="display: none;">
            沒有找到結果。請調整篩選條件或重試。
        </p>
        
        <!-- 地圖彈窗 -->
        <div id="map-modal" class="modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="關閉">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <iframe id="map" width="100%" height="400px" frameborder="0" style="border:0" allowfullscreen></iframe>
                        <p id="carpark-name" class="mt-3"></p>
                        <p id="carpark-address"></p>
                        <p id="carpark-status"></p>
                        <p id="carpark-vacancy"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        let sortOrder = [true, true, true, true]; // true 表示升序，false 表示降序

        function filterCarParks() {
            const vehicleType = document.getElementById('vehicle-type').value;

            const rows = Array.from(document.querySelectorAll('#carpark-table tr'));
            let visible = false;

            rows.forEach(row => {
                const rowVehicleType = row.dataset.vehicleType;
                const vacancy = parseInt(row.querySelector('td:nth-child(4)').innerText) || 'N/A';

                // 判斷行是否符合篩選條件
                const matchesVehicleType = (vehicleType === 'all' || rowVehicleType === vehicleType);
                const hasValidVacancy = vacancy && vacancy > 0;

                if (matchesVehicleType && hasValidVacancy) {
                    row.style.display = '';
                    visible = true;
                } else {
                    row.style.display = 'none';
                }
            });

            // 顯示或隱藏"沒有結果"消息
            document.getElementById('no-results').style.display = visible ? 'none' : 'block';
        }

        function filterCarParksByStatus() {
            const status = document.getElementById('status-filter').value;
            const rows = Array.from(document.querySelectorAll('#carpark-table tr'));
            let visible = false;

            rows.forEach(row => {
                const rowStatus = row.querySelector('td:nth-child(3)').innerText.trim();
                const matchesStatus = (status === 'all' || rowStatus === status);

                if (matchesStatus) {
                    row.style.display = '';
                    visible = true;
                } else {
                    row.style.display = 'none';
                }
            });

            document.getElementById('no-results').style.display = visible ? 'none' : 'block';
        }

        function sortTable(columnIndex) {
            const table = document.getElementById('carpark-table');
            const rows = Array.from(table.rows);
            const ascending = sortOrder[columnIndex];
            const sortedRows = rows.sort((a, b) => {
                const aText = a.cells[columnIndex]?.innerText || '';
                const bText = b.cells[columnIndex]?.innerText || '';
                return columnIndex === 3 ? (ascending ? parseInt(aText) - parseInt(bText) : parseInt(bText) - parseInt(aText)) : (ascending ? aText.localeCompare(bText) : bText.localeCompare(aText));
            });
            sortedRows.forEach(row => table.appendChild(row));
            sortOrder[columnIndex] = !ascending;

            // 更新排序圖標
            const headers = document.querySelectorAll('th');
            headers.forEach((header, index) => {
                const icon = header.querySelector('.sort-icon');
                if (icon) {
                    icon.innerHTML = sortOrder[index] ? '&#x25B2;' : '&#x25BC;';
                }
            });
        }

        function showMap(lat, long, name, address, status, vacancy, vehicleType) {
            const mapModal = document.getElementById('map-modal');
            const mapFrame = document.getElementById('map');
            mapFrame.src = `https://www.google.com/maps?q=${lat},${long}&output=embed`;
            $('#map-modal').modal('show');

            // 動態更新地圖細節
            document.getElementById('carpark-name').textContent = "名稱: " + name;
            document.getElementById('carpark-address').textContent = "地址: " + address;
            document.getElementById('carpark-status').textContent = "狀態: " + status;
            document.getElementById('carpark-vacancy').textContent = vehicleType.charAt(0).toUpperCase() + vehicleType.slice(1).replace(/([A-Z])/g, ' $1') + " 空位: " + vacancy;
        }

        function closeMap() {
            $('#map-modal').modal('hide');
        }

        function toggleFavorite(parkId) {
            fetch(`/toggle_favorite/${parkId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      location.reload();
                  }
              });
        }

        window.onload = function() {
            filterCarParks(); // 初始篩選
            sortTable(3); // 預設按空位排序
            document.querySelector('th:nth-child(4)').click(); // 自動點擊空位排序按鈕
            
            // 檢查暗黑模式狀態並應用
            if (localStorage.getItem('darkMode') === 'enabled') {
                document.body.classList.add('dark-mode');
                applyDarkModeStyles(true);
            }
        };
        
        // 夜間模式樣式應用功能
        function applyDarkModeStyles(isDarkMode) {
            // 樣式表單控件
            const formControls = document.querySelectorAll('select.form-control, input.form-control, textarea.form-control');
            formControls.forEach(element => {
                if (isDarkMode) {
                    element.style.backgroundColor = '#2a2a2a';
                    element.style.color = '#e0e0e0';
                    element.style.borderColor = '#444';
                } else {
                    element.style.backgroundColor = '';
                    element.style.color = '';
                    element.style.borderColor = '';
                }
            });
            
            // 樣式聊天框
            const chatboxPopup = document.getElementById('chatbox-popup');
            if (chatboxPopup) {
                if (isDarkMode) {
                    chatboxPopup.style.backgroundColor = '#2d2d2d';
                    chatboxPopup.style.borderColor = '#444';
                } else {
                    chatboxPopup.style.backgroundColor = '';
                    chatboxPopup.style.borderColor = '';
                }
            }
            
            // 樣式聊天框頭部
            const chatboxHeader = document.querySelector('.chatbox-header');
            if (chatboxHeader) {
                if (isDarkMode) {
                    chatboxHeader.style.backgroundColor = '#2a579a';
                    chatboxHeader.style.borderColor = '#444';
                } else {
                    chatboxHeader.style.backgroundColor = '';
                    chatboxHeader.style.borderColor = '';
                }
            }
            
            // 樣式模態對話框
            const modalContent = document.querySelectorAll('.modal-content');
            modalContent.forEach(modal => {
                if (isDarkMode) {
                    modal.style.backgroundColor = '#2d2d2d';
                    modal.style.color = '#f5f5f5';
                    modal.style.borderColor = '#444';
                } else {
                    modal.style.backgroundColor = '';
                    modal.style.color = '';
                    modal.style.borderColor = '';
                }
            });
            
            // 樣式模態對話框頭部和底部
            const modalHeaders = document.querySelectorAll('.modal-header, .modal-footer');
            modalHeaders.forEach(header => {
                if (isDarkMode) {
                    header.style.borderColor = '#444';
                } else {
                    header.style.borderColor = '';
                }
            });
        }
    </script>
    
    <!-- Chatbox Button -->
    <div id="chatbox-button" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
        <button class="chatbox-btn" onclick="toggleChatbox()" aria-label="Chat with AI">
            <span class="chatbox-icon">&#128172;</span> <!-- Speech bubble emoji as an icon -->
        </button>
    </div>

    <!-- Chatbox Popup -->
    <div id="chatbox-popup" class="chatbox-popup">
        <div class="chatbox-header">
            <h5 class="mb-0">AI Chatbox Room</h5>
            <button class="btn btn-sm btn-danger" onclick="toggleChatbox()">關閉</button>
        </div>
        <iframe src="{{ url_for('ai_chatbox') }}" width="100%" height="100%" frameborder="0"></iframe>
    </div>

    <style>
        /* Floating Action Button (FAB) Style for Chatbox Button */
        .chatbox-btn {
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .chatbox-btn:hover {
            background-color: #0056b3;
            transform: scale(1.1);
        }

        .chatbox-btn:focus {
            outline: none;
            box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.5);
        }

        .chatbox-icon {
            font-size: 1.5rem;
            line-height: 1;
        }

        /* Chatbox Popup */
        .chatbox-popup {
            position: fixed;
            bottom: 90px;
            right: 20px;
            width: 300px;
            height: 800px;
            background: white;
            border: 1px solid #ccc;
            border-radius: 10px;
            display: none;
            z-index: 1000;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .chatbox-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background: #007bff;
            color: white;
            border-bottom: 1px solid #ccc;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .chatbox-header h5 {
            margin: 0;
        }
        
        /* 暗黑模式樣式 - 聊天框 */
        body.dark-mode .chatbox-btn {
            background-color: #2a579a;
        }
        
        body.dark-mode .chatbox-btn:hover {
            background-color: #3a67aa;
        }
        
        body.dark-mode .chatbox-popup {
            background-color: #2d2d2d;
            border-color: #444;
        }
        
        body.dark-mode .chatbox-header {
            background-color: #2a579a;
            border-color: #444;
        }
        
        /* 暗黑模式下修改表格樣式 */
        body.dark-mode .table-striped > tbody > tr:nth-of-type(odd) {
            background-color: #2d2d2d;
        }
        
        body.dark-mode .table-striped > tbody > tr:nth-of-type(even) {
            background-color: #383838;
        }
        
        body.dark-mode .table-hover > tbody > tr:hover {
            background-color: #444;
        }
        
        body.dark-mode .thead-dark th {
            background-color: #444;
            color: #f5f5f5;
            border-color: #555;
        }
        
        /* 暗黑模式下表單元素樣式 */
        body.dark-mode .form-control {
            background-color: #333;
            border-color: #555;
            color: #f5f5f5;
        }
        
        body.dark-mode .form-control:focus {
            background-color: #444;
            color: white;
        }
        
        body.dark-mode label {
            color: #f5f5f5;
        }
        
        /* 暗黑模式下的連結顏色 */
        body.dark-mode a {
            color: #8ab4f8;
        }
        
        body.dark-mode a:hover {
            color: #aecbfa;
        }
        
        /* 暗黑模式下模態視窗樣式 */
        body.dark-mode .modal-content {
            background-color: #2d2d2d;
            color: #f5f5f5;
            border-color: #444;
        }
        
        body.dark-mode .modal-header,
        body.dark-mode .modal-footer {
            border-color: #444;
        }
        
        body.dark-mode .close {
            color: #f5f5f5;
            text-shadow: none;
        }
    </style>

    <script>
        function toggleChatbox() {
            const chatboxPopup = document.getElementById('chatbox-popup');
            chatboxPopup.style.display = chatboxPopup.style.display === 'none' ? 'block' : 'none';
        }
    </script>
{% endblock %}